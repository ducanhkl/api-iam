CREATE SEQUENCE IF NOT EXISTS group_role_id_seq START WITH 1 INCREMENT BY 100;

CREATE SEQUENCE IF NOT EXISTS history_id_seq START WITH 1 INCREMENT BY 100;

CREATE SEQUENCE IF NOT EXISTS otp_id_seq START WITH 1 INCREMENT BY 100;

CREATE SEQUENCE IF NOT EXISTS role_permission_id_seq START WITH 1 INCREMENT BY 100;

CREATE SEQUENCE IF NOT EXISTS sessions_id_seq START WITH 1 INCREMENT BY 100;

CREATE SEQUENCE IF NOT EXISTS user_group_id_seq START WITH 1 INCREMENT BY 100;

CREATE SEQUENCE IF NOT EXISTS user_id_seq START WITH 1 INCREMENT BY 100;

CREATE TABLE group_roles
(
    group_role_id BIGINT                   NOT NULL,
    group_id      VARCHAR(255),
    role_id       VARCHAR(255),
    namespace_id  VARCHAR(255),
    assigned_at   TIMESTAMP WITH TIME ZONE NOT NULL,
    CONSTRAINT pk_group_roles PRIMARY KEY (group_role_id)
);

CREATE TABLE groups
(
    group_id     VARCHAR(100)             NOT NULL,
    group_name   VARCHAR(100),
    description  TEXT,
    namespace_id TEXT,
    created_at   TIMESTAMP WITH TIME ZONE NOT NULL,
    updated_at   TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_groups PRIMARY KEY (group_id)
);

CREATE TABLE key_pairs
(
    key_id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    public_key            TEXT,
    encrypted_private_key TEXT,
    is_active             BOOLEAN,
    algorithm             VARCHAR(100),
    key_usage             VARCHAR(50),
    key_rotation_date     TIMESTAMP WITH TIME ZONE,
    key_status            VARCHAR(50),
    key_version           INTEGER,
    expiry_date           TIMESTAMP WITH TIME ZONE,
    created_at            TIMESTAMP WITH TIME ZONE                NOT NULL,
    updated_at            TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_key_pairs PRIMARY KEY (key_id)
);

CREATE TABLE namespace
(
    namespace_id VARCHAR(255)             NOT NULL,
    name         VARCHAR(100),
    description  VARCHAR(255),
    key_pair_id  BIGINT,
    created_at   TIMESTAMP WITH TIME ZONE NOT NULL,
    updated_at   TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_namespace PRIMARY KEY (namespace_id)
);

CREATE TABLE otps
(
    otp_id       BIGINT                   NOT NULL,
    user_id      BIGINT,
    namespace_id VARCHAR(255),
    code         VARCHAR(10),
    expired_at   TIMESTAMP WITHOUT TIME ZONE,
    used         BOOLEAN,
    type         VARCHAR(20),
    method       VARCHAR(10),
    retries      INTEGER,
    is_verified  BOOLEAN,
    email        VARCHAR(255),
    phone_number VARCHAR(255),
    created_at   TIMESTAMP WITH TIME ZONE NOT NULL,
    updated_at   TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_otps PRIMARY KEY (otp_id)
);

CREATE TABLE password_history
(
    history_id    INTEGER                  NOT NULL,
    user_id       INTEGER,
    password_hash VARCHAR(255),
    pwd_alg       VARCHAR(50),
    created_at    TIMESTAMP WITH TIME ZONE NOT NULL,
    CONSTRAINT pk_password_history PRIMARY KEY (history_id)
);

CREATE TABLE password_policy
(
    policy_id    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    policy_name  VARCHAR(100),
    description  VARCHAR(255),
    namespace_id INTEGER,
    max_age      INTEGER,
    min_strength INTEGER,
    created_at   TIMESTAMP WITH TIME ZONE                 NOT NULL,
    updated_at   TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_password_policy PRIMARY KEY (policy_id)
);

CREATE TABLE permissions
(
    permission_id   VARCHAR(255)             NOT NULL,
    permission_name VARCHAR(100),
    description     TEXT,
    namespace_id    TEXT,
    created_at      TIMESTAMP WITH TIME ZONE NOT NULL,
    updated_at      TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_permissions PRIMARY KEY (permission_id)
);

CREATE TABLE role_permission
(
    role_permission_id BIGINT                   NOT NULL,
    role_id            VARCHAR(255),
    permission_id      VARCHAR(255),
    namespace_id       VARCHAR(255),
    assigned_at        TIMESTAMP WITH TIME ZONE NOT NULL,
    CONSTRAINT pk_rolepermission PRIMARY KEY (role_permission_id)
);

CREATE TABLE roles
(
    role_id      VARCHAR(100) NOT NULL,
    role_name    VARCHAR(100),
    description  TEXT,
    namespace_id VARCHAR(255),
    created_at   TIMESTAMP WITH TIME ZONE,
    updated_at   TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_roles PRIMARY KEY (role_id)
);

CREATE TABLE sessions
(
    session_id               BIGINT                   NOT NULL,
    access_token_id          VARCHAR(255),
    refresh_token_id         VARCHAR(255),
    refresh_token_issue_at   TIMESTAMP WITH TIME ZONE,
    refresh_token_expired_at TIMESTAMP WITH TIME ZONE,
    revoked                  BOOLEAN,
    active                   BOOLEAN,
    user_id                  BIGINT,
    namespace_id             VARCHAR(255),
    user_agent               VARCHAR(512),
    ip_address               VARCHAR(45),
    kid                      BIGINT,
    session_type             VARCHAR(20),
    created_at               TIMESTAMP WITH TIME ZONE NOT NULL,
    updated_at               TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_sessions PRIMARY KEY (session_id)
);

CREATE TABLE user_groups
(
    user_group_id BIGINT                   NOT NULL,
    user_id       BIGINT,
    group_id      VARCHAR(50),
    namespace_id  VARCHAR(50),
    assigned_at   TIMESTAMP WITH TIME ZONE NOT NULL,
    CONSTRAINT pk_user_groups PRIMARY KEY (user_group_id)
);

CREATE TABLE users
(
    user_id        BIGINT                   NOT NULL,
    username       VARCHAR(50),
    email          VARCHAR(100),
    password_hash  VARCHAR(255),
    pwd_alg        VARCHAR(50),
    is_verified    BOOLEAN,
    deleted        BOOLEAN,
    namespace_id   VARCHAR(255),
    status         VARCHAR(255),
    last_login     TIMESTAMP WITH TIME ZONE,
    mfa_enabled    BOOLEAN,
    mfa_secret     VARCHAR(255),
    account_locked BOOLEAN,
    phone_number   VARCHAR(15),
    created_at     TIMESTAMP WITH TIME ZONE NOT NULL,
    updated_at     TIMESTAMP WITH TIME ZONE,
    CONSTRAINT pk_users PRIMARY KEY (user_id)
);

-- Insert data
INSERT INTO public.namespace (namespace_id, name, description, key_pair_id, created_at, updated_at) VALUES ('master', 'Master', 'Master namespace', 1, '2025-02-25 22:01:56.205000 +00:00', '2025-02-25 22:01:57.633000 +00:00');

INSERT INTO key_pairs (key_id, public_key, encrypted_private_key, is_active, algorithm, key_usage, key_rotation_date, key_status, key_version, expiry_date, created_at, updated_at) VALUES (1, e'-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGofHo6GLrJdX+onBy67
nj33C1gK3y0AaofElhmh5DzwfKPt2DFeyMYkNgDnZ4aTIU1srKFyc3WtLgCit0iM
FPPpWLXQc+bHHKWuUEtb+lXZogjk0sCZQ7zv5CCHD5bCCa9Dq55GosUPO4G6UlsL
zMzp/tt6eCG8EJKGjIvtTZDunYV/VU8HKeYN2tAbeqbHrrD0HT0higrwrZrFzruI
v5uhKmljfucukBBhzMpBmXYYJoSLApACt9NNoMh2gNLFF9l/UwGa+ylaQQsYuhlo
5JrymDSy2nPzJJxCkRm2CFOZB8a8ih+qncXKDGvUJyngGZ5TaNwB3JHgeuhJ/zqO
sQIDAQAB
-----END PUBLIC KEY-----', e'-----BEGIN RSA PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC4ah8ejoYusl1f
6icHLruePfcLWArfLQBqh8SWGaHkPPB8o+3YMV7IxiQ2AOdnhpMhTWysoXJzda0u
AKK3SIwU8+lYtdBz5sccpa5QS1v6VdmiCOTSwJlDvO/kIIcPlsIJr0OrnkaixQ87
gbpSWwvMzOn+23p4IbwQkoaMi+1NkO6dhX9VTwcp5g3a0Bt6pseusPQdPSGKCvCt
msXOu4i/m6EqaWN+5y6QEGHMykGZdhgmhIsCkAK3002gyHaA0sUX2X9TAZr7KVpB
Cxi6GWjkmvKYNLLac/MknEKRGbYIU5kHxryKH6qdxcoMa9QnKeAZnlNo3AHckeB6
6En/Oo6xAgMBAAECggEALA8Cj1DawwZPI660E1W5cmV4g8fNlSNRwaHdOEU4deiP
Rh/+H5QwAoTAOvy9THEM7rxqNdY+m1ImhWKWfXaCLTFW8yBBBKfCs1fsDPfsKiNf
owQ/8xAbreDSaWzSB8nrYtfyMWrXkmTFLmDgjHN/HrdoQkDagiABJ+5x4ds+XzTT
clJmM7TOpK7CBva/1mc046u0JVq9fZrpyNKmWRJIqamxId+7c0bJBhbkRYj8fHGu
pFb1o9Pm7/ySk2bDFPgJTgiGxpQrKk6FN5wJ3fm+BSykmomL0dEmyjc0W495qN4p
vBYgD3talGmam4+74/Lnk55rKcjWnIKIUAumL21uKQKBgQD/q7Emi7vw8D5/mBWP
pDkxxHg0Ex6XpjlBV/eRyj1ntFh6n/yq0QMpJZuPiVded1qwhWMzW/z21OB/0nr6
vu4Evxwxtt6B3T6gHdccopPp/QFa2YTwu0bM0gm5Zjn0qyotS/MS7pZGdj31Di+c
k7aBraIX169vtlmDE2rUQlWfdQKBgQC4pu7EnSbHXHcbdJ/VZuNAcG3XcY8zZqc9
+/3YQf20SONHDTXi61iyrcMwaoVjDGyY8uUXzrRrrL1peX1fcZBp4wGEuVjm5fS9
t04nPUFl6Ctn1iFHU9DNniqr2YLTmMKq6gan32pChKQLKG3QyeyL39l+FW3dxT77
OKXhqbSmzQKBgD4PSvz0RjaB2mnWXMV1M3zlF9hsG6zr6FH4LFvzH1yg5ik91HMS
MRY3zr7Us6R2jEj019OLrKetnKDqUnezCMuWKB3ZKcGUFrN/CswkmordowqOajqU
+uaUxU9/hOni8mX0XZhm2YtZAEkPnHcBU/e+Ue4/qJIRTUEH4ZKMV4RRAoGAc3CJ
nYnSEJkSLav/sN6d/E9NnH92U2A99lZwIJ9BCVD4JhdwNOmFjk9r0/0EXyQJUKWp
6/Rif16DHEnDw8Ov0UMGU/+8QL5K/8B1r7pwBFHdsREBxSH1TFcxvjZBwB+ktE2S
06itOeDK3d7sqLdUly3fPyAOi7Mg6NZFfosmUZECgYEA+H1fhHqIEvP/xdUmJdLC
83nAbP4oX3q5baiBT+KRvpq3xOUXm1L22+CiNLwCraKtEvRZSzoRfB08GoQtwe3h
NQyfaoVYOxkk6qyMZBknxsz4SdgqxdpmS0OBvYnRsLEjUsN5zeAUgYcsu0uJSUE5
3ByE5YTLR4CiDjNSrrbpbe8=
-----END RSA PRIVATE KEY-----', true, 'RSA', 'SIGNATURE', '3028-02-25 22:04:52.096000 +00:00', 'ACTIVE', 1, '3025-02-25 22:05:12.223000 +00:00', '2025-02-25 22:05:15.359000 +00:00', '2025-02-25 22:05:16.174000 +00:00');
